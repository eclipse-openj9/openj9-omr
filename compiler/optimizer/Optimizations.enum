/*******************************************************************************
 * Copyright (c) 2000, 2016 IBM Corp. and others
 *
 * This program and the accompanying materials are made available under
 * the terms of the Eclipse Public License 2.0 which accompanies this
 * distribution and is available at http://eclipse.org/legal/epl-2.0
 * or the Apache License, Version 2.0 which accompanies this distribution
 * and is available at https://www.apache.org/licenses/LICENSE-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the
 * Eclipse Public License, v. 2.0 are satisfied: GNU General Public License,
 * version 2 with the GNU Classpath Exception [1] and GNU General Public
 * License, version 2 with the OpenJDK Assembly Exception [2].
 *
 * [1] https://www.gnu.org/software/classpath/license.html
 * [2] http://openjdk.java.net/legal/assembly-exception.html
 *
 * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
 *******************************************************************************/

/*
 * This file will be included within an enum.  Only comments, preprocessor macros,
 * and enumerator definitions are permitted.
 */

   OPTIMIZATION_ENUM_ONLY(endOpts = 0x00) // Marks the end of a list of optimizations

   OPTIMIZATION(inlining)
   OPTIMIZATION(targetedInlining)
   OPTIMIZATION(trivialInlining)
   OPTIMIZATION(CFGSimplification)
   OPTIMIZATION(basicBlockHoisting)
   OPTIMIZATION(basicBlockExtension)
   OPTIMIZATION(treeSimplification)
   OPTIMIZATION(dynamicLiteralPool)
   OPTIMIZATION(localValuePropagation)
   OPTIMIZATION(arraycopyTransformation)
   OPTIMIZATION(localCSE)
   OPTIMIZATION(localDeadStoreElimination)
   OPTIMIZATION(signExtendLoads)
   OPTIMIZATION(loopCanonicalization)
   OPTIMIZATION(loopVersioner)
   OPTIMIZATION(loopReduction)
   OPTIMIZATION(loopReplicator)
   OPTIMIZATION(explicitNewInitialization)
   OPTIMIZATION(globalValuePropagation)
   OPTIMIZATION(redundantMonitorElimination)
   OPTIMIZATION(partialRedundancyElimination)
   OPTIMIZATION(globalCopyPropagation)
   OPTIMIZATION(globalDeadStoreElimination)
   OPTIMIZATION(escapeAnalysis)
   OPTIMIZATION(isolatedStoreElimination)
   OPTIMIZATION(deadTreesElimination)
   OPTIMIZATION(redundantGotoElimination)
   OPTIMIZATION(treesCleansing)
   OPTIMIZATION(localLiveVariablesForGC)
   OPTIMIZATION(globalLiveVariablesForGC)
   OPTIMIZATION(tacticalGlobalRegisterAllocator)
   OPTIMIZATION(localReordering)
   OPTIMIZATION(localLiveRangeReduction)
   OPTIMIZATION(compactNullChecks)
   OPTIMIZATION(loopStrider)
   OPTIMIZATION(loopInversion)
   OPTIMIZATION(fieldPrivatization)
   OPTIMIZATION(catchBlockRemoval)
   OPTIMIZATION(andSimplification)
   OPTIMIZATION(rematerialization)
   OPTIMIZATION(recompilationModifier)
   OPTIMIZATION(generalLoopUnroller)
   OPTIMIZATION(redundantAsyncCheckRemoval)
   OPTIMIZATION(virtualGuardTailSplitter)
   OPTIMIZATION(expressionsSimplification)
   OPTIMIZATION(blockSplitter)
   OPTIMIZATION(invariantArgumentPreexistence)
   OPTIMIZATION(dataAccessAccelerator)
   OPTIMIZATION(stringBuilderTransformer)
   OPTIMIZATION(stringPeepholes)
   OPTIMIZATION(switchAnalyzer)
   OPTIMIZATION(compactLocals)
   OPTIMIZATION(varHandleTransformer)
   OPTIMIZATION(unsafeFastPath)
   OPTIMIZATION(recognizedCallTransformer)
   OPTIMIZATION(coldBlockMarker)
   OPTIMIZATION(coldBlockOutlining)
   OPTIMIZATION(basicBlockPeepHole)
   OPTIMIZATION(innerPreexistence)
   OPTIMIZATION(inductionVariableAnalysis)
   OPTIMIZATION(basicBlockOrdering)
   OPTIMIZATION(loopSpecializer)
   OPTIMIZATION(trivialStoreSinking)
   OPTIMIZATION(generalStoreSinking)
   OPTIMIZATION(idiomRecognition)
   OPTIMIZATION(reorderArrayIndexExpr)
   OPTIMIZATION(liveRangeSplitter)
   OPTIMIZATION(loopAliasRefiner)
   OPTIMIZATION(profiledNodeVersioning)
   OPTIMIZATION(allocationSinking)
   OPTIMIZATION(stripMining)
   OPTIMIZATION(prefetchInsertion)
   OPTIMIZATION(longRegAllocation)
   OPTIMIZATION(shrinkWrapping)
   OPTIMIZATION(samplingJProfiling)
   OPTIMIZATION(trivialDeadTreeRemoval)
   OPTIMIZATION(osrDefAnalysis)
   OPTIMIZATION(blockShuffling)
   OPTIMIZATION(redundantBCDSignElimination)
   OPTIMIZATION(osrLiveRangeAnalysis)
   OPTIMIZATION(osrExceptionEdgeRemoval)
   OPTIMIZATION(SPMDKernelParallelization)
   OPTIMIZATION(arraysetStoreElimination)
   OPTIMIZATION(redundantInductionVarElimination)
   OPTIMIZATION(checkcastAndProfiledGuardCoalescer)
   OPTIMIZATION(trivialBlockExtension)
   OPTIMIZATION(virtualGuardHeadMerger)
   OPTIMIZATION(trivialDeadBlockRemover)
   OPTIMIZATION(rubyIlFastpather)
   OPTIMIZATION(lowerRubyMacroOps)
   OPTIMIZATION(IVTypeTransformation)
   OPTIMIZATION(loadExtensions)  // added temporarily for omr optimizer work
   OPTIMIZATION(regDepCopyRemoval)
   OPTIMIZATION(asyncCheckInsertion)
