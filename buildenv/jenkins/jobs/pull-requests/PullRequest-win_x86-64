pipeline {
    agent{label 'Windows && x86'}
    environment {
        GTEST_FILTER="-*dump_test_create_dump_*:*NumaSetAffinity:*NumaSetAffinitySuspended:PortSysinfoTest.sysinfo_test0:PortSysinfoTest.sysinfo_test_get_tmp3:ThreadExtendedTest.TestOtherThreadCputime"
        GTEST_COLOR="1"
    }
    stages {
        stage('Get Sources') {
            steps {
                timestamps {
                    checkout poll: false, scm: [$class: 'GitSCM', branches: [[name: '${sha1}']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[name: 'origin', refspec: '+refs/pull/*:refs/remotes/origin/pr/*', url: 'https://github.com/eclipse/omr.git']]]
                }
            }
        }
        stage('Build') {
            steps {
                timestamps {
                    dir('build') {
                        echo 'Configure...'
                        sh '''cmake -Wdev -G "Visual Studio 11 2012 Win64" -C../cmake/caches/AppVeyor.cmake ..''' 
                       
                        echo 'Compile...'
                        sh '''cmake --build . -- /m'''
                    }
                }
            }
        }
        stage('Test') {
            steps {
                timestamps {
                    dir('build') {
                        echo "Sanity Test..."
                        sh'''ctest -V -C Debug -j1'''
                    }
                }
            }
        }
    }
    post {
        always {
            echo 'Cleanup workspace'
            deleteDir()
        }
    }
}

